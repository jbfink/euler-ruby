#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#
#
#notes:
#At the BEGINNING, we want:
#an empty array
#two values, a and b.
#adding a and b together gives a value to push into the array
#after the value is pushed:
#b becomes a
#value becomes b
#repeat until array is filled.
#right?

#I have to "seed" the array with a 0 so that array[-1] is not nil. This is a terrible ugly thing, but I am too dumb
#to figure it out. Sorry. Also, sorry for the array.pop/array.unshift. Also not ideal.

a = 0
b = 1
array = [0]
while array[-1] < 4_000_000
value = a+b
array.push(value)
oldb = b
olda = a
b = value
a = oldb
end
array.pop
array.shift
p array
p array.length
